{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 .AppleSystemUIFontMonospaced-Regular;}
{\colortbl;\red255\green255\blue255;\red24\green26\blue30;\red255\green255\blue255;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c12157\c13725\c15686;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Agile: \
\
Theme: Get GiggleGit demo into a stable enough alpha to start onboarding some adventurous clients\
Epic: Onboarding experience\
User Story One: As a vanilla git power-user that has never seen GiggleGit before, I want to discover and understand the differences between normal git and GiggleGit such as how memes are involved in the merge process for GiggleGit and not Git so that I can decide whether GiggleGit is worth using for my work.\
User Story Two: As a team lead onboarding an experienced GiggleGit user, I want to make sure that the experienced GiggleGit user can get used to our current team\cf0 \strokec4 \\'92\cf2 \strokec2 s workflow, so that we can use the GiggleGit new merge features efficiently and avoid encountering any issues in the future.\
User Story Three: As a developer who used normal Git and got bored of figuring out all the merges, I want to be able to complete merges with relatable memes so that programming and making changes in code can be more interesting.\
Task: Use memes that relate to specific users\'92 interests dynamically\
Ticket 1: Ask user for permission to have access to social media accounts in order to access their post/comment history to check for topics they are interested in.\
Ticket 2: Allow users to input specific subjects/topics they are interested in so that memes that only relate to those topics are suggested algorithmically\
\
Formal: \
\
Goal: Make SnickerSync fun to use by showing existing meme visuals to portray changes made between two versions in files(original and modified).\
Non-Goal: Using AI generated memes as those will likely not have a high chance of being understood by people even if they commonly use memes since they would seem new.\
Non-Functional Requirement #1: PMs control the Snickering Meme Pool\
Functional Requirement #1: PMs are able to manually add or remove specific memes\
Functional Requirement #2: PMs are able to manually add or remove general categories which memes can be derived from if they are related to those categories.\
Non-Functional Requirement #2: Random assignment of SnickerSync users for testing purposes.\
Functional Requirement #3: Use a random number generator(1 or 2) for each user to decide whether they go into control group or experimental/variant group.\
Functional Requirement #4: Collect and analyze data to discover whether users who use SnickerSync self-report having statistically significant higher interest levels when merging compared to normal Git users without memes.}